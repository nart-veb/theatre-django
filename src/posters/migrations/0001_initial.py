# Generated by Django 4.2.7 on 2024-02-15 11:05

from django.db import migrations, models
import django.db.models.deletion
import posters.models.map_model
import posters.models.performance_model


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("people", "0004_alter_personcategory_options_person_category"),
    ]

    operations = [
        migrations.CreateModel(
            name="Map",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "map_svg",
                    models.FileField(
                        upload_to=posters.models.map_model.Map.upload_to,
                        verbose_name="Схема SVG",
                    ),
                ),
                (
                    "seats_json",
                    models.FileField(
                        upload_to=posters.models.map_model.Map.upload_to,
                        verbose_name="Места JSON",
                    ),
                ),
            ],
            options={
                "verbose_name": "Карта",
                "verbose_name_plural": "Карты",
            },
        ),
        migrations.CreateModel(
            name="Performance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="Название спектакля"
                    ),
                ),
                ("acts", models.PositiveIntegerField(verbose_name="Количество актов")),
                ("author", models.CharField(max_length=255, verbose_name="Автор")),
                (
                    "description",
                    models.TextField(null=True, verbose_name="Описание спектакля"),
                ),
                (
                    "video_id",
                    models.CharField(
                        max_length=255,
                        null=True,
                        verbose_name="Идентификатор ютуб видео",
                    ),
                ),
                (
                    "placard",
                    models.ImageField(
                        upload_to=posters.models.performance_model.Performance.upload_to,
                        verbose_name="Плакат",
                    ),
                ),
                (
                    "actors",
                    models.ManyToManyField(to="people.person", verbose_name="Актёры"),
                ),
                (
                    "map",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="posters.map",
                        verbose_name="Карта",
                    ),
                ),
            ],
            options={
                "verbose_name": "Спектакль",
                "verbose_name_plural": "Спектакли",
            },
        ),
        migrations.CreateModel(
            name="Poster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateTimeField(verbose_name="Дата начала")),
                (
                    "close_date",
                    models.DateTimeField(
                        verbose_name="Дата закрытия онлайн бронирования"
                    ),
                ),
                (
                    "performance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="posters.performance",
                        verbose_name="Спектакль",
                    ),
                ),
            ],
            options={
                "verbose_name": "Афиша",
                "verbose_name_plural": "Афиши",
            },
        ),
        migrations.CreateModel(
            name="Producer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Имя")),
                ("surname", models.CharField(max_length=255, verbose_name="Фамилия")),
            ],
            options={
                "verbose_name": "Режиссёр",
                "verbose_name_plural": "Режиссёры",
            },
        ),
        migrations.CreateModel(
            name="Ticket",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seat_id", models.PositiveIntegerField()),
                ("row_number", models.PositiveIntegerField(verbose_name="Ряд")),
                ("seat_number", models.PositiveIntegerField(verbose_name="Место")),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="Цена"
                    ),
                ),
                ("sector", models.CharField(max_length=50, verbose_name="Сектор")),
                (
                    "reservation",
                    models.BooleanField(default=False, verbose_name="Забронирован"),
                ),
                (
                    "poster",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="posters.poster",
                        verbose_name="Афиша",
                    ),
                ),
            ],
            options={
                "verbose_name": "Билет",
                "verbose_name_plural": "Билеты",
            },
        ),
        migrations.CreateModel(
            name="PerformanceImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        upload_to=posters.models.performance_model.PerformanceImage.upload_to,
                        verbose_name="Изображение",
                    ),
                ),
                (
                    "performance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="posters.performance",
                        verbose_name="Спектакль",
                    ),
                ),
            ],
            options={
                "verbose_name": "Изображение спектакля",
                "verbose_name_plural": "Изображения спектакля",
            },
        ),
        migrations.AddField(
            model_name="performance",
            name="producer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="posters.producer",
                verbose_name="Режиссер",
            ),
        ),
    ]
